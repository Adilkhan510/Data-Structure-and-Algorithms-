JAVASCRIPT : Reference vs Primitive Values/ Types: 
Javascript is a dynamic language.
Which means we don’t define types, we declare a variable. 
Reference : points to the memory location of the item.
Stored in HEAP.
Takes a little longer to be accessed but can hold much more information.
Perfect for bigger amounts of data.
Managed randomly, but each element has its own location.
Once you create an Object lets say, an element will be created in the HEAP but in the stack there will be a pointer that points to where the object is stored in memory. 
Var = obj {}
Var just stores the pointer. 
It doesn’t know the address.
Var2 = Var 
Creates a new pointer stack that also points to the same object in the HEAP  
Primitive : Are copied by value….. Not the location. If i have one variable that points to another, then the one that points just copies the value of what it is pointing to.
Where are the stored? 
They are stored in STACK. Type of memory that is quickly accessed but doesn’t have a lot of space.
Create firstName = “ max”;
Create firstName = SecondName 
Will get added to the stack
Perfect for strings #,
String
Number
Boolean,
Undefined
Null
Symbol (Es6)
